#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <iostream>
#include <algorithm>
#include <stdlib.h>
#include <map>
using namespace std;

int recursive1(int a){
	if(a>6){
		int temp=2*recursive1(a-3)-3;
		return temp;
	}else if(a>4&&a<=6){
		int temp=recursive1(a+2)+1;
		return temp;
	}else{
		return a+4;
	}
}
int recursive2(int a, int b){
	if(a>b){
		int temp=recursive2(a-2, b+2)+3;
		return temp;
	}else if(a==b){
		int temp=recursive2(a+1, b-1)-1;
		return temp;
	}else{
		return a*b;
	}
}
int recursive3(int a){
	if(a>10){
		return recursive3(recursive3(a-2))+3;
	}else if(a==10){
		return recursive3(a+1)-1;
	}else{
		return a-4;
	}
}
int recursive4(int a, int b){
	if(a>5){
		return recursive4(a-2, b+1)+a;
	}else if(a>=0&&a<=5){
		return recursive4(a-3, b+2)+b;
	}else{
		return pow(a, 2)+a;
	}
}
int recursive5(int x){
	if(x>=10){
		return recursive5(x-2)-1;
	}else if(x>6&&x<10){
		return recursive5(x-1)+4;
	}else{
		return x-3;
	}
}
int recursive6(int x){
	if(x>=8){
		return recursive6(x-3)-1;
	}else if(x>5&&x<8){
		return recursive6(x+1)+2;
	}else{
		return x+2;
	}
}
int recursive7(int x){
	if(x>=7){
		return recursive7(x-2)+3;
	}else{
		return x-5;
	}
}
int recursive8(int x, int y){
	if(x>y){
		return recursive8(x-1, y+2)+1;
	}else{
		return x-y;
	}
}
int recursive9(int x){
	if(x>=7){
		return recursive9(x-2)+3;
	}else{
		return x-5;
	}
}
int recursive10(int x, int y){
	if(x>y){
		return recursive10(x-1, y+2)+1;
	}else{
		return x-y;
	}
}
int main() {
	cout<<recursive10(12, 4);
}
