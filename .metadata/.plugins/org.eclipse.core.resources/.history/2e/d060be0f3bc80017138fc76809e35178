#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <iostream>
#include <algorithm>
#include <stdlib.h>
using namespace std;

vector<string> permutation(vector<string> number){
	vector<string> stuffs;
	if(number.size()==1){
		string guy;
		guy.append(number.front());
		stuffs.push_back(guy);
		return stuffs;
	}else{
		vector<string> solution;
		for(vector<string>::iterator itr=number.begin(); itr!=number.end(); itr++){
			string num, thing;
			vector<string> numberCopy;
			vector<string> temp;
			thing=*itr;
			for(vector<string>::iterator it=number.begin(); it!=number.end(); it++){
				if(*it!=*itr){
					numberCopy.push_back(*it);
				}
			}
			temp=permutation(numberCopy);
			for(vector<string>::iterator its=temp.begin(); its!=temp.end(); its++){
				(*its).append(thing);
			}
			for(vector<string>::iterator bob=temp.begin(); bob!=temp.end(); bob++){
				solution.push_back(*bob);
			}
		}
		return solution;
	}
}
vector<string> separateDigits(string number){
	int temp=number.length();
	vector<string> answers;
	for(int i=0; i<temp; i++){
		string s=number.substr(i, 1);
		answers.push_back(s);
	}
	return answers;
}
int main() {
	string number; int k;
	cin>>number>>k;
	vector<string> separateNum=separateDigits(number);
	vector<string> permutedNum=permutation(separateNum);
	for(vector<string>::iterator itr=permutedNum.begin(); itr!=permutedNum.end(); itr++){
		cout<<*itr<<" ";
	}
}
